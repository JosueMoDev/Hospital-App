// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

enum Gender {
  FEMALE
  MALE
}

enum Role {
  PATIENT
  ADMIN
  DOCTOR
}

type LastUpdate {
  account String
  date DateTime
  action String?
}

type Address {
  city String
  street String
  state String
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  duiNumber String @unique
  email String @unique
  password String
  name String
  lastname String
  gender Gender
  phone String
  isValidated Boolean? @default(false)
  role Role
  photoUrl String?
  photoId String?
  createdAt DateTime
  lastUpdate LastUpdate[]

  //? Clinic relation
  clinics Clinic[]

  //? Clinic Assignment relation
  doctors ClinicAssignment[] @relation("doctors_assigned")

  //? Appointments relations
  appointment_doctor Appointment? @relation("appointment_doctor")
  appointment_patient Appointment? @relation("appointment_patient")
  appointment_account Appointment? @relation("appointment_account")

  //? Records relations 
  doctors_record Record? @relation("doctor_record")
  patients_record Record? @relation("patient_record")
}


model Clinic {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  registerNumber String @unique
  name String
  phone String
  address Address
  photoURl String?
  photoId String?
  createdAt DateTime
  status Boolean ? @default(true)
  lastUpdate LastUpdate[]
  // ? Account Relation
  createdBy Account @relation(fields: [accountId], references: [id])
  accountId String @db.ObjectId
  // ? Clinic Assignment relation
  clinicAssignment ClinicAssignment? 
}

model Appointment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  startDate DateTime
  endDate DateTime
  lastUpdate LastUpdate[]
  createdAt DateTime 

  doctor Account @relation("appointment_doctor", fields: [doctorId], references: [id])
  doctorId String @unique @db.ObjectId

  patient Account @relation("appointment_patient", fields: [patientId], references: [id])
  patientId String @unique @db.ObjectId

  createdBy Account @relation("appointment_account", fields: [accountId], references: [id])
  accountId String @unique @db.ObjectId

}



model Record {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime
  title String
  pdf String
  status Boolean? @default(true)
  lastUpdate LastUpdate[]

  doctor Account @relation("doctor_record",fields: [doctorId], references: [id])
  doctorId String @unique @db.ObjectId

  patient Account @relation("patient_record",fields: [patientId], references: [id])
  patientId String @unique @db.ObjectId
}

model ClinicAssignment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  clinic Clinic @relation(fields: [clinicId], references: [id])
  clinicId String @unique @db.ObjectId

  lastUpdate LastUpdate[]

  doctors Account @relation("doctors_assigned", fields: [doctorsId], references: [id])
  doctorsId String @unique @db.ObjectId
  
}